I used the tool that Alex Groce recommended on GitHub, Milu. I was interested in using mutation testing to see how effective my random testing of the minion.c card really was, since I had chosen to debug this card in the earlier portion of the project and all bugs seemed to be resolved. It was my hope that every random mutant of the minion.c card would cause the function to fail to pass it's unit test, thus helping verify that my tests were comprehensive and effective.
I obtained 15 mutants and ran each against the unit test. Each one failed to pass my unit test. I think that this is a very good sign that the unit test for the minion card is comprehensive and effective. I think that mutation testing is probably the most useful tool for determining whether your unit tests are stringent enough, however it is also prohibitively expensive. I would only recommend that mutation be used on critical functionality with very complex behavior.